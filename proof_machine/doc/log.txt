objects:
- constant
- random variable
- set (for probability)
- interval
- functions
- 

operations:
- expectation
- conditional expectation
- max, min, sup, inf

some standard machinary:
- union bound
- equivalent rv
- cauchy schwarz
- Jensen's inequality

Ef(X) \leq f(EX), for concave f
f(EX) \leq E(fX), for convex f
Bounded-difference
sub-gaussian

Todo:
Linear operator (factory)
Real numbers

- Simplify function: (+, -), (*, /), (^, ^), (exp, log) 
    - factorising 
    - grouping index
    - expanding
    - cancel out
Package
Sub-tree mapping
choose list of proofs

OK - Equation class - transitivity
OK - Associative Law, Distributive Law
OK - Arithmetic with tree: +, - *, /, ^, exp, log
OK - Equation class: apply function with optional arguments.
OK - partial functional / curry approach to buildParseTree
OK - debug tree Parser for inconsistent parsing with extra '()'

Filelist
- classNode.py: Node class and BinaryTree class
- exprTree.py: 'buildParseTree' function
- classEquation.py: Equation class
- exprTreeMethods.py: 
- main.py: 

basicTreePattern:
genericTreePattern:
generateMapping:
arithmetic:
distributiveLaw:
factoriseAndExpand:
operatorRelation
simplify
classDerivation
classEquation
classTree
codeTree

load
main
setTechniques
theorems
treeEquality
unitTest
util

Done:
assoiciativeLaw.py: forwardAssociative, backwardAssociative
inequality.py: cauchySchwarz
codeTree.py: LRcodeToBaseThreeCode, baseThreeCodeToLRcode, LRcodeToTree, baseThreeCodeToTree
operatorRelation.py: invariant, symmetry, tautology



