{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"variabl",
				"variableList"
			],
			[
				"symbol",
				"symbolStateDict"
			],
			[
				"cound",
				"countNodes"
			],
			[
				"cont",
				"continueFlag"
			],
			[
				"fun",
				"funList"
			],
			[
				"expr",
				"exprList"
			],
			[
				"get",
				"getLeftChild"
			],
			[
				"for",
				"forwardAssociative"
			],
			[
				"sym",
				"symmetry"
			],
			[
				"m",
				"mathType"
			],
			[
				"insert",
				"insertRight"
			],
			[
				"constant",
				"constantList"
			],
			[
				"exp",
				"expr1"
			],
			[
				"expression",
				"expressionAnalysis"
			],
			[
				"par",
				"parentOp"
			],
			[
				"num",
				"numChildren"
			],
			[
				"treeTo",
				"treeToBaseThreeCodes"
			],
			[
				"associa",
				"associativeDict"
			],
			[
				"geet",
				"getRightChildValue"
			],
			[
				"parent",
				"parentStack"
			],
			[
				"paretn",
				"parentStack"
			],
			[
				"getL",
				"getLeftChild"
			],
			[
				"getRoot",
				"getRootNodeValue"
			],
			[
				"getRoo",
				"getRootNodeValue"
			],
			[
				"base",
				"baseThreeCodeToTree"
			],
			[
				"relabel",
				"relabelTree"
			],
			[
				"tree",
				"treeToString"
			],
			[
				"Tre",
				"treeToString"
			],
			[
				"LR",
				"LRcodeToTree"
			],
			[
				"node",
				"nodeStack"
			],
			[
				"LRcod",
				"LRcodeToTree"
			],
			[
				"baseTh",
				"baseThreeCode"
			],
			[
				"baseThee",
				"baseThreeCodeToLRcode"
			],
			[
				"se",
				"searchString"
			],
			[
				"max",
				"maxPathLength"
			],
			[
				"b",
				"baseThreeCode"
			],
			[
				"code",
				"codeToLRcode"
			],
			[
				"right",
				"rightChild"
			],
			[
				"in",
				"insertRight"
			],
			[
				"inset",
				"insertLeft"
			],
			[
				"getLeft",
				"getLeftChildValue"
			],
			[
				"variable",
				"variableState"
			],
			[
				"functional",
				"functional_distribute"
			],
			[
				"getRigh",
				"getRightChildValue"
			],
			[
				"left",
				"leftDistributiveCase"
			],
			[
				"assoc",
				"associativeCase"
			],
			[
				"asso",
				"associativeLaw"
			],
			[
				"arith",
				"arithmeticSymbol"
			],
			[
				"getleft",
				"getLeftChildValue"
			],
			[
				"targ",
				"targetLayer2Node"
			],
			[
				"one",
				"oneOneToOneTwo"
			],
			[
				"getRI",
				"getRightChildValue"
			],
			[
				"lef",
				"getLeftChild"
			],
			[
				"getLef",
				"getLeftChildValue"
			],
			[
				"takeEx",
				"takeExpectation"
			],
			[
				"T",
				"Tree_Operator_X"
			],
			[
				"function",
				"functionalToMeasure"
			],
			[
				"vari",
				"variableState"
			],
			[
				"getLeftChil",
				"getLeftChildValue"
			],
			[
				"getRight",
				"getRightChildValue"
			],
			[
				"getl",
				"getLeftChildValue"
			],
			[
				"getroo",
				"getRootNodeValue"
			],
			[
				"parenth",
				"parenthesesList"
			],
			[
				"unary",
				"unaryFunctionList"
			],
			[
				"daily",
				"dailyCalories"
			],
			[
				"calor",
				"caloriesPerCookie"
			],
			[
				"calorie",
				"calorieCalculator"
			],
			[
				"NBF",
				"NB_FRAMES_PER_POSTURE"
			],
			[
				"DIR",
				"DIR_LEFT"
			],
			[
				"spri",
				"spriteHeight"
			],
			[
				"sprit",
				"spriteWidth"
			],
			[
				"nbSprites",
				"nbSpritesPerRow"
			],
			[
				"SPR",
				"SPRITE_HEIGHT"
			],
			[
				"SPRI",
				"SPRITE_WIDTH"
			],
			[
				"SPT",
				"SPRITE_HEIGHT"
			],
			[
				"SPRITE",
				"SPRITE_WIDTH"
			],
			[
				"nb",
				"NB_FRAMES_PER_POSTURE"
			],
			[
				"SPRIT",
				"SPRITE_HEIGHT"
			],
			[
				"sprite",
				"spritesheet"
			],
			[
				"SPr",
				"SPRITE_WIDTH"
			],
			[
				"draw",
				"drawWireFrameRect"
			],
			[
				"SPIR",
				"SPRITE_HEIGHT"
			],
			[
				"canv",
				"canvasSpriteSheet"
			],
			[
				"Update",
				"updateMonsterPosition"
			],
			[
				"input",
				"inputStates"
			],
			[
				"update",
				"updateMonsterPosition"
			],
			[
				"st",
				"strokeRect"
			],
			[
				"get_numb",
				"get_number_of_recovered"
			],
			[
				"number",
				"number_of_simulation"
			],
			[
				"get_number",
				"get_number_in_state"
			],
			[
				"geneat",
				"generation_counter"
			],
			[
				"pare",
				"parent_2"
			],
			[
				"random",
				"random_number"
			],
			[
				"muta",
				"mutation_rate"
			],
			[
				"numb",
				"number_of_sequences"
			],
			[
				"models",
				"models_to_indicators"
			],
			[
				"keeptrack",
				"keeptrack_step"
			],
			[
				"target",
				"target_ratio"
			],
			[
				"covar",
				"covariates_dist"
			],
			[
				"quasi",
				"quasibinomial\t{stats}"
			],
			[
				"irrel",
				"irrelevant_covariates"
			],
			[
				"larg",
				"large_p_small_n_evaluation"
			],
			[
				"is_evla",
				"is_evaluated"
			],
			[
				"total",
				"total_runs"
			],
			[
				"measure",
				"measure_of_fit"
			],
			[
				"track",
				"track_records"
			],
			[
				"current",
				"current_node"
			],
			[
				"enco",
				"encode_model"
			],
			[
				"chil",
				"children_nodes"
			],
			[
				"set_",
				"set_of_nodes"
			],
			[
				"best",
				"best_score"
			],
			[
				"set_of",
				"set_of_within_nodes"
			],
			[
				"time",
				"time_taken"
			],
			[
				"maximum_",
				"maximum_num_drop"
			]
		]
	},
	"buffers":
	[
		{
			"file": "proof_machine/factory/expressionAnalysis.py",
			"settings":
			{
				"buffer_size": 2864,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "proof_machine/factory/genericTreePattern.py",
			"settings":
			{
				"buffer_size": 3975,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "proof_machine/doc/proofCases.py",
			"settings":
			{
				"buffer_size": 1916,
				"line_ending": "Unix"
			}
		},
		{
			"file": "proof_machine/objClass/classTree.py",
			"settings":
			{
				"buffer_size": 2656,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "proof_machine/lib/expectations.py",
			"settings":
			{
				"buffer_size": 573,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "proof_machine/inequality.py",
			"settings":
			{
				"buffer_size": 1530,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "proof_machine/numberSystem.py",
			"settings":
			{
				"buffer_size": 962,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "proof_machine/test/template.py",
			"settings":
			{
				"buffer_size": 444,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "proof_machine/load.py",
			"settings":
			{
				"buffer_size": 2064,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "proof_machine/doc/log.txt",
			"settings":
			{
				"buffer_size": 3130,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 207.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pacakge",
				"Package Control: Install Package"
			],
			[
				"repl R",
				"SublimeREPL: R"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"R ex",
				"Set Syntax: R Extended"
			],
			[
				"REPL R",
				"Bookmarks: Select Previous"
			],
			[
				"markdown",
				"Markdown Preview: Preview in Browser"
			],
			[
				"package con",
				"Package Control: Remove Package"
			],
			[
				"markdo",
				"Strapdown.js Markdown: Preview in a browser"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 557.0
	},
	"console":
	{
		"height": 357.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/doc",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/factory",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/helper",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/lib",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/manipulation",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/objClass",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/objClass/__pycache__",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/test"
	],
	"file_history":
	[
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/doc/proofCases.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/factory/treeEncoding.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/objClass/classTree.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/helper/generateMapping.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/lib/expectations.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/<string>",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/setup.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/factory/treeEquality.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/doc/proofCases2.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/inequality.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/objClass/classDerivation.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/test/theorems_test.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/load.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/manipulation/operatorRelation.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/functionDict.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/theorems.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/test/template.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/manipulation/associativeLaw.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/factory/expressionAnalysis.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/test/treeEquality_test.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/lib/setOperations.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/setOperations.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/lib/probabilityMeasure.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/test/inequality_test.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/factory/genericTreePattern.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/factory/<string>",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/factory/basicTreePattern.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/util.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/test/treeCreation_test.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/manipulation/distributiveLaw.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/test/expressionAnalysis_test.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/test/<string>",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/treeEquality.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/treeEncoding.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/objClass/classEquation.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/codeTree.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/test/associativeLaw_test.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/manipulation/factoriseAndExpand.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/manipulation/generateMapping.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/doc/log.txt",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/test/operatorRelation_test.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/test/arithmetic_test.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/test/classTree_test.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/unitTest.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/factory/treeCreation.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/setTechniques.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/theorems_test.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/test/treeCreation_test",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/objClass/__init__.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/__init__.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/test/factoriseAndExpand_test.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/treeCreation.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/classTree_test.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/test/classEquation_test.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/setup.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine/expression.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/test/classEquation_test.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/__init__.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/load.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/main.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/test/treeCreation_test.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/patternConversion.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/arithmetic.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/theorems.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/class/classTree.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/objClass/__init__.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/class/__init__.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/class/classEquation.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/treeCreation.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proof_machine.sublime-project",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/proofCases.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/treeCreation_test.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/log.txt",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/simplify.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/util.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/unitTest.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/factoriseAndExpand.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/classEquation.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/classTree.py",
		"/Users/mac_ks/Downloads/math.js",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/treeStructure.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/treeMethods.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/exprTreeMethods.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/classNode.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/exprTree.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/tuple.py",
		"/Users/mac_ks/Documents/kwokcf/learning/python/learn_python/nodes_tree.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/class_node.py",
		"/Users/mac_ks/Documents/kwokcf/experiments/proof_machine/class_nodes.py",
		"/Users/mac_ks/Documents/kwokcf/learning/python/learn_python/parseTree.py",
		"/Users/mac_ks/Documents/kwokcf/Generalised_PCA",
		"/Users/mac_ks/Documents/learning/nm/BenchMark.hs",
		"/Users/mac_ks/Documents/learning/nm/TestFunction.hs",
		"/Users/mac_ks/Documents/learning/nm/demo.hs",
		"/Users/mac_ks/Documents/learning/nm/NM.hs",
		"/Users/mac_ks/Documents/work/Tutorial/Models_for_insurance_and_finance_2017/before.html",
		"/opt/local/var/macports/sources/rsync.macports.org/release/tarballs/ports/textproc/pandoc/Portfile",
		"/Users/mac_ks/Documents/learning/test_function.hs",
		"/Users/mac_ks/Documents/learning/learn_javascript/logistic_regression.html",
		"/Users/mac_ks/Documents/learning/learn_javascript/mathjs.html",
		"/Users/mac_ks/Documents/learning/nm/test_function.hs",
		"/Users/mac_ks/Documents/learning/haskell/test_case.hs",
		"/Users/mac_ks/Documents/learning/state_space_model/util.js",
		"/Users/mac_ks/Documents/learning/state_space_model/plot.html",
		"/Users/mac_ks/Documents/learning/tangle/first_attempt.html",
		"/Users/mac_ks/Documents/learning/tangle/TangleTemplate.html",
		"/Users/mac_ks/Documents/ada_solve.py",
		"/Users/mac_ks/Downloads/Probability.ris",
		"/Users/mac_ks/Downloads/Probability.enw",
		"/Users/mac_ks/Downloads/Probability.bibtex",
		"/Users/mac_ks/Documents/Tues_0215_first_AM2.txt",
		"/Users/mac_ks/Documents/Tues_0315_second_AM2.txt",
		"/Users/mac_ks/Documents/Weds_1200_third_AM2.txt",
		"/Users/mac_ks/Documents/kcf-jackson.github.io/help.txt",
		"/Users/mac_ks/Documents/learning/html_5_games/walking_animation_and_movable_box.html",
		"/Users/mac_ks/Documents/learning/html_5_games/temp.html",
		"/Users/mac_ks/Documents/learning/html_5_games/html_5_game_animation_w_direction.html",
		"/Users/mac_ks/Documents/learning/html_5_games/html_5_game_animation_sprite.html",
		"/Users/mac_ks/Documents/learning/html_5_games/html_5_game_sprite_images.html",
		"/Users/mac_ks/Documents/learning/html_5_games/html_5_game_animation_sprite_2.html",
		"/Users/mac_ks/Documents/learning/html_5_games/html_5_game_animation_sprite",
		"/Users/mac_ks/Documents/learning/html_5_games/html_5_sprite_images.html",
		"/Users/mac_ks/Documents/learning/html_5_games/html_5_game_combining_everything.html",
		"/Users/mac_ks/Documents/learning/html_5_games/html_5_game_collision.html",
		"/Users/mac_ks/Documents/learning/html_5_games/html_5_game_bouncing_balls.html",
		"/Users/mac_ks/Documents/learning/html_5_games/html_5_game_animating_multiple_obj_angles.html",
		"/Users/mac_ks/Documents/learning/html_5_games/html_5_game_animating_multiple_obj.html",
		"/Users/mac_ks/Documents/learning/html_5_games/html_5_games_ex1e_monster.html"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"ifelse",
			"orderedset",
			"which",
			"unique",
			"cup",
			"nodeStack",
			"treeToString(pt)",
			"tree.",
			"tree",
			"RootValue",
			"RootVal",
			"pStack",
			"eTree",
			"fplist",
			"tree",
			"ConstantNode",
			"parser",
			"parse",
			"lambda",
			"<-",
			"calcDis",
			"mainLoop",
			"spriteImage",
			"canvas",
			".fill",
			"updateBalls",
			"height",
			"bounded",
			"draw",
			"print",
			"decode_blocks",
			"wow-card",
			"apple",
			"a week",
			"trim",
			"j",
			"decode",
			" p",
			"p "
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"cap",
			"nodeQueue",
			"pt.treeToString()",
			"self.",
			"self",
			"Value",
			"RootNode",
			"parentStack",
			"exprTree",
			"tokenList",
			"L",
			"=",
			".x"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "proof_machine/factory/expressionAnalysis.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2864,
						"regions":
						{
						},
						"selection":
						[
							[
								560,
								560
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "proof_machine/factory/genericTreePattern.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3975,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "proof_machine/doc/proofCases.py",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 1916,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "proof_machine/objClass/classTree.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2656,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1990.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "proof_machine/lib/expectations.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 573,
						"regions":
						{
						},
						"selection":
						[
							[
								573,
								573
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "proof_machine/inequality.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1530,
						"regions":
						{
						},
						"selection":
						[
							[
								642,
								642
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "proof_machine/numberSystem.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 962,
						"regions":
						{
						},
						"selection":
						[
							[
								60,
								60
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "proof_machine/test/template.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 444,
						"regions":
						{
						},
						"selection":
						[
							[
								179,
								179
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "proof_machine/load.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2064,
						"regions":
						{
						},
						"selection":
						[
							[
								750,
								759
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "proof_machine/doc/log.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3130,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/MarkdownEditing/Markdown.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 355.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 199.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/Python/Python.sublime-build",
	"project": "proof_machine.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Documents/kwokcf/thesis/Paper_3_Gibbs sampler model selection/codes/GibbsMS/GibbsMS_0.23/GibbsMS.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 254.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
